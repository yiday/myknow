[{"title":"Hello World","url":"/2025/05/12/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n"},{"title":"禅的世界-圣严法师","url":"/2025/05/12/books/%E4%BD%9B%E5%AD%A6/%E7%A6%85%E7%9A%84%E4%B8%96%E7%95%8C/","content":"禅的世界-圣严法师\n释圣严，或尊称为圣严“法师”（1931年1月22日－2009年2月3日），俗名张保康，江苏南通人，佛学“大师”，教育家，佛教“弘法大师”，日本立正大学博士，也是禅宗曹洞宗的第五十代传人、临济宗的第五十七代传人、台湾法鼓山的创办人，法鼓山的弟子信众尊称为“师父”。\n\n禪的世界 - 聖嚴法師.pdf (访问密码: 5098)\n","categories":["佛学"]},{"title":"MarkDown学习","url":"/2025/05/12/knows/MarkDown%E5%AD%A6%E4%B9%A0/","content":"标题学习# 一级标题## 二级标题### 三级标题\n\n列表学习- 无序列表- 无序列表- 无序列表\n\n1. 有序列表2. 有序列表3. 有序列表\n\n引用学习&gt; 引用学习\n\n分割线学习---\n\n图片学习![图片名称](图片路径)\n\n超链接学习[超链接名称](超链接路径)\n\n或者 跳转到新的窗口\n[超链接名称](超链接路径 &quot;新窗口&quot;)&#123;target=&quot;_blank&quot;&#125;\n\n### 代码学习\n\n```代码语言代码内容\n\n","categories":["知识库"]},{"title":"Dart基础","url":"/2025/05/13/knows/flutter/dart%E5%9F%BA%E7%A1%80/","content":"变量学习1、var 关键字类似于 JavaScript 中的 var，它可以接收任何类型的变量，但最大的不同是 Dart 中 var 变量一旦赋值，类型便会确定，则不能再改变其类型，如：\n// 定义变量var name = &quot;张三&quot;;name = 123; // 报错;\n","categories":["知识库"],"tags":["Flutter","Dart"]},{"title":"supervisor配置问题总结","url":"/2025/05/12/knows/python/supervisor%E9%85%8D%E7%BD%AE%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/","content":"问题 1：supervisor 启动 gunicorn 报错：显示\n\ngunicorn FATAL Exited too quickly (process log may have details)但查找进程显示有 gunicorn 进程\n\nps -ef | grep gunicorn\n\n通过 AI 分析：\n\ndaemon &#x3D; True 与 Supervisor 冲突Gunicorn 的 daemon &#x3D; True：会让 Gunicorn 以后台守护进程方式运行（脱离终端），而 Supervisor 本身会管理进程的前台运行。两者同时启用时，Supervisor &gt; 会认为 Gunicorn 已退出（因为 Gunicorn 主进程已退出），导致标记为 FATAL。解决方案：移除 gunicorn 配置文件里的 daemon &#x3D; True，让 Gunicorn 以前台进程方式运行，由 Supervisor 管理。\n\n问题 2：supervisor 启动的项目，还需要指定 pidfile 吗？：显式指定 pidfile,但查看目录并不会生成 pid 文件查 AI：\n\n当你使用 Supervisor 管理应用时，通常不需要再为应用单独配置 pidfile。Supervisor 本身会自动管理所有被监控进程的 PID 文件（进程标识符文件），用于跟踪进程状态（如启动、停止、重启）。以下是详细说明：为什么不需要应用自定义 pidfile？\n\nSupervisor 自动管理 PID 文件Supervisor 会为每个被管理的程序生成一个 .pid 文件，默认路径为：\n\n\n\n/var/run/supervisor/supervisord.pid/tmp/supervisor-&lt;program&gt;.pid\n\n或根据你的配置指定路径。作用：Supervisor 使用 .pid 文件来记录进程的 PID，确保进程状态可追踪。\n\n\n\n应用自定义 pidfile 的潜在问题冲突风险：如果应用（如 Gunicorn）也配置了 pidfile，可能导致：Supervisor 和应用同时写入同一文件，引发冲突。应用退出后，Supervisor 的 .pid 文件可能残留，导致下次启动失败。冗余操作：Supervisor 已经管理了进程生命周期，应用的 pidfile 通常是多余的。\n\n\n","categories":["知识库","python"],"tags":["supervisor","gunicorn"]},{"title":"Flutter基础组件","url":"/2025/05/12/knows/flutter/%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6/","content":"文本组件\nText：用于显示文本。\nRichText：用于显示富文本，支持多种样式。\nDefaultTextStyle：用于设置默认文本样式。\nSelectableText：用于显示可选择的文本。\nFittedBox：用于调整文本大小以适应可用空间。\nTextSpan：用于构建富文本的文本片段。\nTextStyle：用于定义文本的样式，如字体、大小、颜色等。\nTextDecoration：用于定义文本的装饰，如下划线、删除线等。\nTextAlign：用于定义文本的对齐方式，如左对齐、右对齐、居中对齐等。\nTextOverflow：用于定义文本溢出时的处理方式，如截断、省略号等。\nTextDirection：用于定义文本的方向，如左到右、右到左等。\nTextScaleFactor：用于定义文本的缩放因子。\nTextWidthBasis：用于定义文本的宽度基准。\nTextHeightBehavior：用于定义文本的高度行为。\nTextBaseline：用于定义文本的基线。\nTextDecorationStyle：用于定义文本装饰的样式，如实线、虚线等。\nTextDecorationColor：用于定义文本装饰的颜色。\n\n布局组件\nContainer：用于创建一个矩形的容器，用于包裹其他组件。\nPadding：用于在容器内添加内边距，用于调整组件的位置。\nMargin：用于在容器外添加外边距，用于调整组件的位置。\n\n交互组件\nGestureDetector：用于检测用户的手势，如点击、长按、滑动等。\nInkWell：用于创建一个可点击的 ink 效果，用于响应用户的手势。\nDraggable：用于创建可拖动的组件。\nDropTarget：用于创建可接收拖动组件的目标。\nDragTarget：用于创建可接收拖动组件的目标。\nDragSource：用于创建可拖动的组件。\nDragSourceListener：用于监听拖动组件的状态。\nDropTargetListener：用于监听接收拖动组件的状态。\nDragTargetAcceptor：用于接受拖动组件的目标。\nDragTargetAcceptorListener：用于监听接收拖动组件的状态。\nDragTargetAcceptorDelegate：用于定义接收拖动组件的目标的行为。\nDragTargetAcceptorDelegateListener：用于监听接收拖动组件的状态。\nDragTargetAcceptorDelegateBuilder：用于构建接收拖动组件的目标的行为。\n\n动画组件\nAnimatedContainer：用于创建一个可动画的容器，用于调整组件的位置、大小、颜色等。\nAnimatedOpacity：用于创建一个可动画的透明度，用于调整组件的透明度。\nAnimatedPositioned：用于创建一个可动画的位置，用于调整组件的位置。\nAnimatedPadding：用于创建一个可动画的内边距，用于调整组件的位置。\nAnimatedMargin：用于创建一个可动画的外边距，用于调整组件的位置。\nAnimatedSize：用于创建一个可动画的大小，用于调整组件的大小。\nAnimatedAlign：用于创建一个可动画的对齐方式，用于调整组件的位置。\n\n弹窗组件\nAlertDialog：用于创建一个对话框，用于显示提示信息。\nSimpleDialog：用于创建一个简单的对话框，用于显示提示信息。\nBottomSheet：用于创建一个底部弹出的对话框，用于显示提示信息。\nDialog：用于创建一个对话框，用于显示提示信息。\nSnackBar：用于创建一个弹出的提示信息，用于显示提示信息。\nBottomAppBar：用于创建一个底部弹出的对话框，用于显示提示信息。\nBottomNavigationBar：用于创建一个底部导航栏，用于显示提示信息。\nBottomNavigationBarItem：用于创建一个底部导航栏的条目，用于显示提示信息。\n\n","categories":["知识库"],"tags":["Flutter"]}]